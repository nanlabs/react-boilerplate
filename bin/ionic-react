#!/usr/bin/env bash

IMAGE_NAME=${RNDOCKER_IMAGE_NAME:-ionic-react}
HOST_ANDROID_DIR=${RNDOCKER_HOST_ANDROID_DIR:-$HOME/.android}

# The following defaults MUST stay in sync with the corresponding settings in
# Dockerfile, and if any overrides MUST match any ARGs given when building the
# image!
DOCKER_USERNAME=${RNDOCKER_DOCKER_USERNAME:-dev}
DOCKER_PROJECT_MOUNT=${RNDOCKER_DOCKER_PROJECT_MOUNT:-/project}
DOCKER_UID=${RNDOCKER_DOCKER_UID:-1000}

# TODO document unknown arguments
# --privileged -> ???
# -v /tmp/.X11-unix -> also needed for access to the host display
# -v /dev/bus/usb -> gives access to USB devices, so physical android devices
#   can be used
# -v "$HOST_ANDROID_DIR" -> allows data such as avds to be cached on the host
#   instead of being lost when exiting the container
# -v "$(pwd)" -> mounts the current directory (ie. project directory) into the
#   container
# -v /dev/shm -> ???
# -v /etc/machine-id -> ???
# -v /run/user/$UID/pulse -> allows the emulator to play sounds through the host
#   pulseaudio
# -v /var/lib/dbus -> ???
# --net host -> ???
# -e DISPLAY="$DISPLAY" -> required for the container to access the host display
docker run \
       --rm \
       -it \
       --privileged \
       -v /tmp/.X11-unix:/tmp/.X11-unix \
       -v /dev/bus/usb:/dev/bus/usb \
       -v "$HOST_ANDROID_DIR":/Landing/"$DOCKER_USERNAME"/.android \
       -v "$(pwd)":"$DOCKER_PROJECT_MOUNT" \
       -v /dev/shm:/dev/shm \
       -v /etc/machine-id:/etc/machine-id \
       -v /run/user/$UID/pulse:/run/user/"$DOCKER_UID"/pulse \
       -v /var/lib/dbus:/var/lib/dbus \
       --net host \
       -e DISPLAY="$DISPLAY" \
       "$IMAGE_NAME" \
       "$@"
